--- a/net/minecraft/network/protocol/login/ClientboundCustomQueryPacket.java
+++ b/net/minecraft/network/protocol/login/ClientboundCustomQueryPacket.java
@@ -8,7 +_,7 @@
 import net.minecraft.network.protocol.login.custom.DiscardedQueryPayload;
 import net.minecraft.resources.ResourceLocation;
 
-public record ClientboundCustomQueryPacket(int transactionId, CustomQueryPayload payload) implements Packet<ClientLoginPacketListener> {
+public record ClientboundCustomQueryPacket(int transactionId, CustomQueryPayload payload) implements Packet<ClientLoginPacketListener>, net.minecraftforge.network.ICustomPacket<ClientboundCustomQueryPacket> {
     public static final StreamCodec<FriendlyByteBuf, ClientboundCustomQueryPacket> STREAM_CODEC = Packet.codec(
         ClientboundCustomQueryPacket::write, ClientboundCustomQueryPacket::new
     );
@@ -25,8 +_,8 @@
     private static DiscardedQueryPayload readUnknownPayload(ResourceLocation p_299981_, FriendlyByteBuf p_297706_) {
         int i = p_297706_.readableBytes();
         if (i >= 0 && i <= 1048576) {
-            p_297706_.skipBytes(i);
-            return new DiscardedQueryPayload(p_299981_);
+            var data = p_297706_.wrap(p_297706_.readBytes(i));
+            return new DiscardedQueryPayload(p_299981_, data, buf -> buf.writeBytes(data.slice()));
         } else {
             throw new IllegalArgumentException("Payload may not be larger than 1048576 bytes");
         }
@@ -46,4 +_,8 @@
     public void handle(ClientLoginPacketListener p_134754_) {
         p_134754_.handleCustomQuery(this);
     }
+
+    @Override public int getIndex() { return transactionId(); }
+    @Override public ResourceLocation getName() { return this.payload.id(); }
+    @org.jetbrains.annotations.Nullable @Override public FriendlyByteBuf getInternalData() { return ((DiscardedQueryPayload)this.payload).data(); }
 }
