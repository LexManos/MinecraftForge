--- a/net/minecraft/network/protocol/login/ServerboundCustomQueryAnswerPacket.java
+++ b/net/minecraft/network/protocol/login/ServerboundCustomQueryAnswerPacket.java
@@ -8,7 +_,7 @@
 import net.minecraft.network.protocol.login.custom.CustomQueryAnswerPayload;
 import net.minecraft.network.protocol.login.custom.DiscardedQueryAnswerPayload;
 
-public record ServerboundCustomQueryAnswerPacket(int transactionId, @Nullable CustomQueryAnswerPayload payload) implements Packet<ServerLoginPacketListener> {
+public record ServerboundCustomQueryAnswerPacket(int transactionId, @Nullable CustomQueryAnswerPayload payload) implements Packet<ServerLoginPacketListener>, net.minecraftforge.network.ICustomPacket<ServerboundCustomQueryAnswerPacket> {
     public static final StreamCodec<FriendlyByteBuf, ServerboundCustomQueryAnswerPacket> STREAM_CODEC = Packet.codec(
         ServerboundCustomQueryAnswerPacket::write, ServerboundCustomQueryAnswerPacket::read
     );
@@ -26,8 +_,8 @@
     private static CustomQueryAnswerPayload readUnknownPayload(FriendlyByteBuf p_299934_) {
         int i = p_299934_.readableBytes();
         if (i >= 0 && i <= 1048576) {
-            p_299934_.skipBytes(i);
-            return DiscardedQueryAnswerPayload.INSTANCE;
+            var data = p_299934_.wrap(p_299934_.readBytes(i));
+            return new DiscardedQueryAnswerPayload(data, buf -> buf.writeBytes(data.slice()));
         } else {
             throw new IllegalArgumentException("Payload may not be larger than 1048576 bytes");
         }
@@ -46,4 +_,8 @@
     public void handle(ServerLoginPacketListener p_298492_) {
         p_298492_.handleCustomQueryPacket(this);
     }
+
+    @Nullable @Override public FriendlyByteBuf getInternalData() { return this.payload instanceof DiscardedQueryAnswerPayload dc ? dc.data() : null; }
+    @Override public net.minecraft.resources.ResourceLocation getName() { return net.minecraftforge.network.NetworkInitialization.LOGIN_NAME; }
+    @Override public int getIndex() { return transactionId(); }
 }
