--- a/net/minecraft/world/entity/animal/horse/AbstractHorse.java
+++ b/net/minecraft/world/entity/animal/horse/AbstractHorse.java
@@ -299,6 +_,11 @@
 
     @Override
     public boolean causeFallDamage(float p_149499_, float p_149500_, DamageSource p_149501_) {
+        var event = net.minecraftforge.event.ForgeEventFactory.onLivingFall(this, p_149499_, p_149500_);
+        if (event.isCanceled()) return false;
+        p_149499_ = event.getDistance();
+        p_149500_ = event.getDamageMultiplier();
+
         if (p_149499_ > 1.0F) {
             this.playSound(SoundEvents.HORSE_LAND, 0.4F, 1.0F);
         }
@@ -340,6 +_,7 @@
 
         this.inventory.addListener(this);
         this.syncSaddleToClients();
+        this.caps.createInventory(this.inventory);
     }
 
     protected void syncSaddleToClients() {
@@ -385,9 +_,9 @@
     protected void playStepSound(BlockPos p_30584_, BlockState p_30585_) {
         if (!p_30585_.liquid()) {
             BlockState blockstate = this.level().getBlockState(p_30584_.above());
-            SoundType soundtype = p_30585_.getSoundType();
+            SoundType soundtype = p_30585_.getSoundType(level(), p_30584_, this);
             if (blockstate.is(Blocks.SNOW)) {
-                soundtype = blockstate.getSoundType();
+                soundtype = blockstate.getSoundType(level(), p_30584_.above(), this);
             }
 
             if (this.isVehicle() && this.canGallop) {
@@ -810,6 +_,7 @@
             float f1 = Mth.cos(this.getYRot() * (float) (Math.PI / 180.0));
             this.setDeltaMovement(this.getDeltaMovement().add((double)(-0.4F * f * p_248808_), 0.0, (double)(0.4F * f1 * p_248808_)));
         }
+        net.minecraftforge.common.ForgeHooks.onLivingJump(this);
     }
 
     protected void playJumpSound() {
@@ -1126,5 +_,19 @@
 
     public final Container getBodyArmorAccess() {
         return this.bodyArmorAccess;
+    }
+
+    private net.minecraftforge.common.capabilities.providers.HorseProvider caps = new net.minecraftforge.common.capabilities.providers.HorseProvider(this);
+
+    @Override
+    public <T> net.minecraftforge.common.util.LazyOptional<T> getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable net.minecraft.core.Direction facing) {
+        var ret = caps.getCapability(capability, facing);
+        return ret.isPresent() ? ret : super.getCapability(capability, facing);
+    }
+
+    @Override
+    public void invalidateCaps() {
+        super.invalidateCaps();
+        caps.invalidate();
     }
 }
